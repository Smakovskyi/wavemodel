using System;

namespace wavemodel
{
    class Program
    {
		#region bathymetry var

		// bathymetry 15000m x 15000m with a step 500m
		public static int[,] BathH = {
			{ 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2250, 1750, 1250,  750,  250,    0,  250,  750, 1250, 1750, 2250, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500},
			{ 2500, 2375, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2125, 1750, 1250,  750,  250,    0,  250,  750, 1250, 1750, 2125, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2375, 2500},
			{ 2500, 2250, 1875, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1625, 1250,  750,  250,    0,  250,  750, 1250, 1625, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1875, 2250, 2500},
			{ 2500, 2250, 1750, 1375, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1125,  750,  250,    0,  250,  750, 1125, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1375, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  875,  750,  750,  750,  750,  750,  750,  750,  750,  625,  250,    0,  250,  625,  750,  750,  750,  750,  750,  750,  750,  750,  875, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  750,  375,  250,  250,  250,  250,  250,  250,  250,  250,  125,    0,  125,  250,  250,  250,  250,  250,  250,  250,  250,  375,  750, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2250, 2500},
			{ 2250, 2125, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2125, 2250},
			{ 1750, 1750, 1625, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1625, 1750, 1750},
			{ 1250, 1250, 1250, 1125,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1125, 1250, 1250, 1250},
			{  750,  750,  750,  750,  625,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  625,  750,  750,  750,  750},
			{  250,  250,  250,  250,  250,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  125,  250,  250,  250,  250,  250},
			{    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0},
			{  250,  250,  250,  250,  250,  125,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  125,  250,  250,  250,  250,  250},
			{  750,  750,  750,  750,  625,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  625,  750,  750,  750,  750},
			{ 1250, 1250, 1250, 1125,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1125, 1250, 1250, 1250},
			{ 1750, 1750, 1625, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1625, 1750, 1750},
			{ 2250, 2125, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2125, 2250},
			{ 2500, 2250, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  750,  250,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,  250,  750, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  750,  375,  250,  250,  250,  250,  250,  250,  250,  250,  125,    0,  125,  250,  250,  250,  250,  250,  250,  250,  250,  375,  750, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1250,  875,  750,  750,  750,  750,  750,  750,  750,  750,  625,  250,    0,  250,  625,  750,  750,  750,  750,  750,  750,  750,  750,  875, 1250, 1750, 2250, 2500},
			{ 2500, 2250, 1750, 1375, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1125,  750,  250,    0,  250,  750, 1125, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1250, 1375, 1750, 2250, 2500},
			{ 2500, 2250, 1875, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1625, 1250,  750,  250,    0,  250,  750, 1250, 1625, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1750, 1875, 2250, 2500},
			{ 2500, 2375, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2125, 1750, 1250,  750,  250,    0,  250,  750, 1250, 1750, 2125, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2250, 2375, 2500},
			{ 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2250, 1750, 1250,  750,  250,    0,  250,  750, 1250, 1750, 2250, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500}
			};

		// speed profile from 0m to -3000m with a step 50m
		public static float[] BathC =
			{ 1500, 1505, 1515, 1530, 1525, 1520, 1515, 1510, 1505, 1500, 1495, 1490, 1485, 1480, 1470, 1460, 1450, 1440, 1430, 1420, 1410, 1400, 1405, 1410, 1415, 1420, 1425, 1430, 1435, 1440, 1445};

		public static float graphStep = 0.01f;
		public static float graphTime = 0.01f;

		// int Step = 50;
		public static int Nx = 30; // 300; // 15000 / Step;
		public static int Ny = 30; // 300; // 15000 / Step;
		public static int Nz = 30; // 30;  // 1500  / Step;

		#endregion

		static void Main(/*string[] args*/)
        {
			PDESolver pdeSolver = new PDESolver();
            pdeSolver.Init(0.015f, Nx, Ny, Nz);
            pdeSolver.SetCoefficients(1000, BathC);

            while(pdeSolver.GettCurrent() < 1.0)
            {
                pdeSolver.CalcNextStep();
                pdeSolver.SaveToCSV();
                Console.WriteLine(pdeSolver.GettCurrent());

                if(pdeSolver.GettCurrent() > graphTime)
                {
                    pdeSolver.SaveCurrentValuesP("P_" + (int)(100 * Math.Round(graphTime, 2)) + ".kr");
                    graphTime += graphStep;
                    pdeSolver.FlushCSV();
                }
            }
            pdeSolver.Close();
        }
    }
}
